import React, { useState } from 'react';
import './App.css';

// 게임 시작 후 보여줄 주인공 방의 ASCII 아트입니다.
// `` (백틱)을 사용하여 여러 줄의 문자열을 쉽게 만들 수 있습니다.
// [추가] 스토리 데이터 객체
const storyData = {
  intro: {
    asciiArt: `
⡁⠡⡁⠡⡁⠡⡁⠡⡁⠡⡁⢅⠡⢁⢁⢉⠕⡩⡈⢅⠡⡁⠡⡁⠡⠈⠄⠡⠈⠄⡁⢈⠀⡁⢈⠀⡁⢈⠀⡁⢈⠀⡁⢀⠁⡀⢁⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⠄⡁⠈⠄⠁⠌⠠⢁⠡⠈⢌⢈⠐
⡀⢂⠐⡀⢂⠐⡀⢂⠐⠀⠆⡐⠀⠢⢀⠂⡕⡐⢌⠂⠢⡈⠐⠠⠁⠌⠠⠁⢂⠐⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠂⡐⠀⠌⡀⢁⠈⡂⠠⠂⠡⠀⠢⠈
⠐⡀⢂⠐⡀⢂⠐⠠⡁⠡⡈⢄⠑⡀⢂⠐⡌⠢⡡⠡⡁⢌⠈⠄⠡⢀⠡⠈⠄⠠⠁⠂⠐⠀⠂⡐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⡀⢁⠐⠀⠌⠠⠐⠀⠢⠀⠌⠠⠁⠌⡂⠡
⡐⢀⠂⡐⠠⡀⢁⠂⡐⠀⠢⠐⠄⡐⠀⠢⡘⢔⢈⠢⠐⠄⠨⠀⢅⠀⢂⠈⠄⡁⢈⠀⡁⠈⠄⠠⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⡀⢁⠈⠠⠁⠄⠠⢈⠐⠀⢌⠀⡁⢈⠂⠌⠠⠁⢌⠠⠁
⠐⡀⢂⠐⡀⢂⠐⠄⠨⡀⢑⠈⠢⢀⠑⠠⢊⠔⡡⢊⠌⡂⢑⠀⠢⢀⠁⡐⢀⠂⠄⠐⠀⠌⠐⡀⠂⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⠄⠠⠀⡁⠂⡐⠀⢂⠈⡀⠢⢀⠐⡀⠂⠡⡈⠐⠠⠂⠡
⠐⡀⢂⠐⡀⢂⠈⡂⢐⠀⡂⢑⠐⠠⠁⠌⡢⢑⠌⠢⢂⠌⡠⠑⡀⢂⠐⡀⢂⠐⡈⠠⢁⠈⠄⠠⠈⡐⠀⠂⠐⡀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠀⠂⠐⠠⢀⠁⡐⢀⠐⡀⠂⠄⠨⢀⠡⡀⢁⠊⠄⡑
⡀⠂⠄⢂⠐⡀⢂⠐⠠⠂⢌⠄⡑⡈⡐⠡⡘⢄⠣⡑⠢⠂⢔⠁⠢⠐⢄⠐⡀⢂⠐⢀⠂⠐⡈⠐⠠⢀⠁⠌⠠⢀⠁⡈⢀⠁⡈⠠⢁⠈⡀⢁⠈⠄⡁⢈⠠⠁⠌⡀⢂⠀⠢⠀⠄⠨⢀⠈⠢⠀⡂⢐⠀⡑⠠⢈
⠠⠁⢌⠀⡂⠐⠠⢱⠋⡊⠒⡑⠑⡌⢪⠁⡉⢹⡉⡉⡉⢉⢉⠉⡉⡉⡁⢹⠀⡂⠐⠠⠈⠄⠠⢁⠂⠠⠂⡈⠐⡀⢂⠀⠂⠄⢐⠀⠂⠄⠐⡀⠂⡐⠠⠀⢂⠐⠄⡐⠠⠈⡂⠈⠄⡁⢂⠈⡂⢐⠈⠄⠨⠠⠁⠢
⢂⠁⠢⠀⠌⠠⠁⢼⡁⠌⢄⢈⠐⡅⠸⡀⢂⠸⡅⢐⠀⠢⢀⠂⠐⠄⡀⢹⠀⠌⠠⢁⠌⡠⠑⡠⢁⢌⣠⣈⠐⡄⠢⡈⢂⠌⡠⣈⣂⢌⠐⡠⢈⠐⠠⢁⠂⡐⠄⡠⠑⠠⡈⢐⠀⠢⢀⠂⢌⠠⡁⢌⠐⡡⢈⠂
⠀⠅⠨⠀⢅⠈⡂⢘⡆⠨⡀⢂⢊⠢⡊⠦⡀⢘⡇⢌⠀⡣⠀⢅⠈⠂⠄⢹⠀⢅⣹⡾⣷⣾⣾⣶⠡⡢⡩⡩⡙⡍⡝⣉⠧⣽⢌⢝⢩⢛⢛⢓⢛⠚⠷⠲⢞⢖⣷⣂⣑⢄⡢⡠⣁⡑⠠⢂⠅⠢⡐⠄⡂⠢⡀⡑
⡈⠄⡑⠐⡀⢂⠐⠨⡇⢢⠠⡁⠎⣐⡷⡌⠢⢐⡗⠞⡾⢀⠪⣠⠈⢌⢂⢹⠂⡂⢾⣝⣷⣻⣿⢇⢕⢕⢕⢜⢌⢎⢪⢪⣓⡿⡐⡕⢕⢅⡫⣌⢕⡙⢎⡻⣜⣿⣿⣿⣿⣿⢿⣟⠛⠛⢛⠛⣿⣿⣿⡆⢌⠢⠠⡈
⠐⢄⢈⠐⡀⢂⠡⢈⡗⠱⡨⣊⣂⣺⡱⡝⠴⡡⡗⢸⣿⠆⡹⡄⠣⡨⡂⢹⡂⢌⢺⣵⣗⢿⢏⢲⡑⡕⡕⡕⡕⡕⢕⢕⢾⡣⡪⡪⡪⡲⢕⠴⡱⡱⡍⣖⢿⣻⣿⣷⣿⣽⢿⣿⠀⡑⢄⠡⣿⣿⣿⠢⡨⢂⠢⡐
⡀⠢⠀⠢⢀⠅⠢⢀⢯⠐⢴⢃⡜⠱⡜⢌⢒⢐⡏⠨⣿⡅⢫⡞⠘⢫⠋⢸⠂⠆⠘⠋⠉⠀⠊⠊⠘⠈⠊⠊⠊⠪⠣⠱⠫⠒⠕⡕⡭⣪⡣⡫⡪⡪⡪⢮⢿⠟⠙⠊⠳⣟⣿⡷⢀⠢⢐⠅⣿⣷⣿⠡⡊⠔⠠⠊
⠨⡀⢑⠈⢄⠊⢄⠡⣫⠪⡨⢢⢘⠢⡊⢆⢱⢁⣟⠀⡿⡠⢈⢇⢑⢘⢃⠓⡒⢒⠚⠲⠒⠶⠴⠴⢤⢦⣤⣄⣄⣠⣀⡀⠄⢀⠀⠀⡀⠀⡀⠈⠈⢈⠈⠁⠠⠀⠡⡈⠢⣿⡿⣿⣿⠖⣳⣿⣿⣿⣿⠐⡕⡈⢊⠢
⠐⡀⠢⢁⠂⡑⠄⠢⣹⠜⡔⢥⡑⡕⡱⢡⠣⡂⡋⢔⢡⠢⡑⠔⡡⢅⢪⢈⠪⡐⢍⢊⠕⣑⢑⠱⡐⡢⠢⡰⠡⢅⢍⢩⢋⢋⡋⠳⡚⠖⠶⢦⣥⣀⠀⡡⢀⠕⡐⢌⢪⡿⡿⣿⣷⡦⣾⡿⣿⣽⣿⠈⢦⢈⢢⣑
⠠⡈⢄⠡⡈⠔⡡⡑⡘⡓⡙⡊⡊⢳⢜⢆⢧⢱⠜⡰⢅⢖⠱⡜⡔⡡⢆⢕⢡⢊⢔⡡⠣⢌⠢⡱⢌⠪⡘⢔⡑⡪⢢⢑⠅⢎⢌⠕⡌⡣⡓⢦⢪⢿⡆⢐⠄⡊⢔⢡⣳⣯⡺⣔⡟⢁⠻⣿⢟⣿⢯⠊⣦⣷⡿⠟
⠢⢂⠢⠡⡈⢂⠢⡈⢌⠢⡈⠔⠨⢐⡵⡫⣲⢕⣝⢝⡪⡳⡹⡪⡮⡳⣪⢎⡣⡧⢮⡸⣱⢡⣋⠖⡕⡱⡊⢆⢕⠜⡤⢣⡱⡱⡨⣪⢪⡪⡝⣎⢗⢽⡗⠠⡊⢔⡥⣻⣯⣿⣿⡿⣿⣯⣿⢿⣿⢯⣟⠔⣽⣟⠠⡃
⠑⢄⠑⢄⠈⠂⠔⢀⠂⠢⢀⠑⠠⠀⡷⣙⠶⡵⣕⢝⡎⣯⡪⣳⡹⣪⡣⣫⢞⢮⡣⡯⡺⣕⢝⢞⢝⡼⣩⡳⣕⢯⢪⣖⢕⢾⣨⠳⡵⣎⢾⢬⡳⣝⣟⢔⢵⣽⣾⡿⡿⣿⣽⡿⣿⣻⡿⣿⣻⢿⡯⡊⣿⣻⢮⣶
⠀⡂⠢⢀⠡⠁⠌⠠⠁⠢⢀⠈⡢⢊⢜⠱⡫⡺⣪⡳⣝⡬⣺⢪⢞⢮⡮⣺⡹⡮⣺⣹⢎⢾⢕⢟⡵⡫⣞⣕⢵⡫⡮⡮⣳⡳⣳⣝⢮⡪⣳⢣⠯⡪⣕⣷⡻⣞⢎⠕⢜⠔⡌⢪⠑⡍⢪⢋⠓⡫⢪⠈⡿⡋⠛⢾
⠐⠠⠁⠢⢀⠡⠈⡠⠁⠂⠄⠐⠠⢀⠁⡑⣈⢦⢢⣢⡩⡘⢕⡙⢝⠎⠾⡪⣞⢞⢮⢖⢽⣕⢗⡯⣪⣻⢔⠷⡽⡺⣞⣝⢽⢪⢗⡵⣳⡝⣎⢣⡷⣻⢽⢎⠫⡰⡈⡊⡢⢑⠌⠢⡑⢌⠢⡁⡣⢘⠄⡱⣝⢌⠑⡢
⠈⠄⡑⢀⠂⠐⠄⠄⠨⢀⠅⡈⠢⡐⠕⠭⡪⡒⣝⢖⡿⣿⢿⣾⢾⣾⣵⣼⣔⣅⡫⣑⢝⢌⡛⡺⢪⠷⣝⣯⡺⣝⢖⡵⣟⣵⡻⡕⣭⣲⣽⣫⢏⡝⣕⢕⡝⣎⢞⡜⡖⡵⣌⡢⡈⠢⡑⢌⠢⡑⢌⢰⡳⠠⡑⢌
⢐⠀⠢⠀⢅⠈⡂⢈⠂⠐⠄⠄⠡⢈⠊⠢⠢⢌⢌⠪⣑⢙⠣⡛⢷⢳⡻⣞⣟⢿⣻⢿⡷⣿⢾⣮⣧⣷⣰⢦⡱⣍⢭⡙⡬⡢⣳⣞⢾⡵⡗⢝⣮⣮⡪⣎⢮⡪⣎⢞⢮⢺⢜⢮⣐⡡⡊⢔⠡⠪⡠⣣⡓⢌⠐⡅
⠠⢁⠌⢂⠐⠠⠂⠄⠡⢁⠌⡠⠑⠠⡁⢊⠐⠄⠢⠡⠠⡁⢃⠪⠢⡑⢌⠪⡨⡋⡓⢏⠟⡽⣫⢷⢯⣻⡽⣗⡽⣺⡳⣟⡮⡿⡵⣯⠻⡊⢜⠰⣿⣳⢟⢵⡱⡵⡱⣝⢎⢷⡱⣣⢗⡭⣻⡱⣛⠶⣔⢵⡁⠪⡐⢌
⠠⢂⠐⡡⢈⠄⡡⢈⠂⠔⠠⡀⠑⠄⢄⠡⡈⢂⠑⡈⠢⠠⡁⢂⠑⠄⡡⢈⠄⡑⠨⢂⠣⠒⢔⠡⡣⣉⢚⠕⡫⠳⡝⡽⣪⢟⠎⡅⢣⠘⡄⠣⣿⣽⣣⡳⣕⢝⢮⡪⡳⣕⢽⡸⣕⢵⣣⢏⣞⡝⣮⢳⡌⢆⠱⣈
⠠⡁⠢⠐⠄⠢⠐⢄⢁⠊⠄⢌⠐⡁⠢⠐⢄⠡⡈⢄⠑⡐⢄⠡⡈⢂⠔⠠⠂⢌⠠⡁⠌⠢⡁⠢⠐⢄⠡⢃⢊⠊⡢⠪⡠⠑⢌⠢⡑⢌⢌⠘⣷⢯⡪⡿⣾⣵⣧⣻⡜⣧⢳⢝⡮⡳⣕⢯⡺⣪⣗⣽⠇⡨⢂⠕
⢄⢈⢂⠑⡈⢂⠑⡠⢂⠡⠊⠄⢌⠠⡁⠑⠄⠢⠐⢄⠡⠂⠔⠠⠂⠢⡈⢂⠑⠄⠢⠈⠔⠡⡈⠔⡁⢂⠑⡠⢂⠑⢄⠑⢌⢈⢂⢑⠈⢆⠐⡡⣿⣻⢜⡿⣞⣿⡾⣿⣻⣿⢿⣿⣾⣿⣻⡿⣿⣿⢯⣿⡁⠪⡠⡉
`,
    dialogue: [
      "...",
      "또 잠을 못잤다..",
      "빌어먹을 공명회 녀석들",
      "어쨌든 기훈씨가 어제 그녀석들에 대한 소식을 메일로 보내놓겠다고 했으니까 확인해볼까",
      "자리에서 일어나 컴퓨터를 키고 메일함함을 살펴본다.. 화면에는 이메일 한 통이 와 있다."
    ],
    options: [
      { text: "1. 이메일을 확인한다.", nextNode: "email_check" },
    ]
  },


  email_check: {
    asciiArt: `
    
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡟⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⢻⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀             ⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀            ⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣶⣶⣶⣶⣿⣿⣿⣿⣿⣧⣤⣤⣤⣤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

`,
    dialogue: [
      "메일의 내용은 다음과 같았다.",
      "... 공명회 본부를 찾았습니다. ...",
      "... 하단에 위치 찍어두었으니 확인해보시길 바랍니다. ...",
      "... 그런데, 조금 이상한 점이 있습니다. 직접 가서 확인해보시는게 좋을 것 같네요. ..."
    ],
  }
};

// [교체] function App() 부터 파일 끝까지 이 코드로 교체하세요.

function App() {
  const [gameStarted, setGameStarted] = useState(false);
  const [dialogueIndex, setDialogueIndex] = useState(0);
  const [isDialogueFinished, setIsDialogueFinished] = useState(false);
  const [currentNodeId, setCurrentNodeId] = useState('intro');

  const handleGameStart = () => {
    setGameStarted(true);
  };

  const handleOptionClick = (nextNodeId) => {
    if (storyData[nextNodeId]) { // 다음 노드가 실제로 있는지 확인
      setCurrentNodeId(nextNodeId);
      setDialogueIndex(0);
      setIsDialogueFinished(false);
    } else {
      console.error("다음 장면을 찾을 수 없습니다:", nextNodeId);
    }
  };

  const renderStartScreen = () => (
    <>
      <div className="text-area">
        <p style={{ color: '#ff4d4d', fontWeight: 'bold' }}>* 주의 *</p>
        <p>해당 게임에는 공포 요소가 포함되어 있습니다.</p>
        <p>플레이에 유의해 주시길 바랍니다.</p>
      </div>
      <div className="options-area">
        <button className="option-button" onClick={handleGameStart}>
           플레이하기
        </button>
      </div>
    </>
  );

  const renderGameScreen = () => {
    const currentNode = storyData[currentNodeId];

    if (!currentNode) {
      return <div className="text-area"><p>오류: '{currentNodeId}' 장면을 찾을 수 없습니다.</p></div>;
    }

    const handleDialogueClick = () => {
      // 수정된 부분: introMonologue.length -> currentNode.dialogue.length
      if (dialogueIndex < currentNode.dialogue.length - 1) {
        setDialogueIndex(prevIndex => prevIndex + 1);
      } else {
        if (currentNode.options && currentNode.options.length > 0) {
          setIsDialogueFinished(true);
        }
      }
    };

    return (
      <>
        <pre className="ascii-art-area">{currentNode.asciiArt}</pre>
        <div className="bottom-box">
          {!isDialogueFinished ? (
            <div className="dialogue-box" onClick={handleDialogueClick}>
              <p>{currentNode.dialogue[dialogueIndex]}</p>
              <span className="continue-prompt">(클릭하여 계속)</span>
            </div>
          ) : (
            <div className="options-area">
              {currentNode.options.map((option, index) => (
                <button
                  key={index}
                  className="option-button"
                  onClick={() => handleOptionClick(option.nextNode)}
                >
                  {option.text}
                </button>
              ))}
            </div>
          )}
        </div>
      </>
    );
  };
  
  // App 함수의 return 문
  return (
    <div className="game-container">
      {!gameStarted ? renderStartScreen() : renderGameScreen()}
    </div>
  );
}

export default App;